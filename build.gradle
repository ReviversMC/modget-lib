plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

configurations {
    includeTransitive {
        transitive = true
    }
}

repositories {
    mavenCentral()
    maven {
        url = "https://mvnrepository.com/"
    }
    maven {
        url = "https://repo.gradle.org/gradle/libs-releases-local/"
    }
}

dependencies {
    // JUnit Jupiter for testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // log4j for Minecraft compatible logging
    implementation "org.apache.logging.log4j:log4j-api:${project.log4j_version}"
    implementation "org.apache.logging.log4j:log4j-core:${project.log4j_version}"

    // gradle-core for semver operations
    compileOnly "org.gradle:gradle-core:${project.gradle_core_version}"

    // jackson for reading YAML
	implementation "com.fasterxml.jackson.core:jackson-core:${project.jackson_version}"
	implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${project.jackson_dataformat_yaml_version}"
	implementation "com.fasterxml.jackson.core:jackson-databind:${project.jackson_version}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${project.jackson_version}"

    // commons-text for capitalizing text
    implementation "org.apache.commons:commons-text:${project.commons_text_version}"

    // spotbugs
    compileOnly "com.github.spotbugs:spotbugs:${project.spotbugs_version}"
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
